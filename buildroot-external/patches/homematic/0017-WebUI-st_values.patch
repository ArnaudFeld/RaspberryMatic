--- homematic/WebUI/www/config/st_values.cgi	1970-01-01 01:00:00.000000000 +0100
+++ homematic/WebUI/www/config/st_values.cgi	2016-11-22 12:55:51.000000000 +0100
@@ -0,0 +1,75 @@
+#!/bin/tclsh
+source ../cgi.tcl
+
+set ST_FILENAME "$env(DOCUMENT_ROOT)/config/stringtable_de.txt"
+set JS_FILENAME "$env(DOCUMENT_ROOT)/config/st_values.js"
+	
+proc put_js_functions {} {
+
+	global JS_FILENAME
+	
+	if { ! [catch {open $JS_FILENAME "r"} jsfile] } then {
+
+		while {! [eof $jsfile] } {
+			gets $jsfile zeile
+
+			#Weiche EOF-Marke:
+			if {$zeile == "//<."} then { break }
+			
+			puts $zeile
+		}
+
+		catch {close $jsfile}
+	}
+}
+
+proc parse_line {zeile p_context p_value} {
+
+	upvar $p_context context
+	upvar $p_value   value
+	
+	set tokenizer [split $zeile "\t"]
+	
+	set context [lindex $tokenizer 0]
+	set value   [lindex $tokenizer 1]
+}
+
+proc parse_file {} {
+
+	global ST_FILENAME
+	
+	if { ! [catch {open $ST_FILENAME "r"} stFile] } then {
+
+		puts "elvST = new Array();"
+		
+		while {! [eof $stFile] } {
+			gets $stFile zeile
+
+			if {$zeile == ""} then {
+				continue
+			}
+
+      		if { [regexp {^([^\t]*)\t+(.*)$} $zeile dummy key value] } then {
+	      		if { [regexp {^<.*>$} $value] } then {
+					#Dieser Parameter wurde noch nicht übersetzt. Nicht ins JavaScript-Array einfü!
+					continue
+				}
+			}
+
+			set context ""
+			set value ""
+			
+			parse_line $zeile context value
+			
+			puts "elvST\['$context'\] = '$value';"
+		}
+		
+    	catch {close $stfile}
+	}
+}
+
+cgi_http_head {
+  cgi_content_type "text/javascript; charset=iso-8859-1"
+}
+parse_file
+put_js_functions
--- homematic/WebUI/www/config/st_values.js	1970-01-01 01:00:00.000000000 +0100
+++ homematic/WebUI/www/config/st_values.js	2016-11-22 12:55:51.000000000 +0100
@@ -0,0 +1,138 @@
+/*
+Ãœbersetzt den Inhalt der HTML-Elemente <span class="stringtable_value">...</span>
+und <select class="stringtable_select">...</select>
+*/
+st_setStringTableValues = function()
+{
+	var translation;
+	
+	//In <span class="stringtable_value">...</span> eingeschlossene WÃ¶rter Ã¼bersetzen
+	var temp = document.getElementsByClassName('stringtable_value');
+  
+    var wrappers = new Array();
+	for (var i=0; i<temp.length; i++)
+	{	
+		wrappers[i]=temp[i];
+	}
+    
+	for (var i=0; i<wrappers.length; i++)
+	{	
+		wrappers[i].innerHTML = st_getValue( wrappers[i].innerHTML ).escapeHTML();
+		wrappers[i].className += "_translated";
+	}
+	//-------------------------------------------------------------------------
+
+	//Comboboxen Ã¼bersetzen <select class="stringtable_select" ... >...</select>
+	var temp = document.getElementsByClassName('stringtable_select');
+
+	var selboxes = new Array();
+	for (var i = 0, len = temp.length; i < len; i++)
+	{
+		selboxes[i] = temp[i];
+	}
+	
+	for (var i=0; i<selboxes.length; i++)
+	{
+		var selectelem = selboxes[i];
+
+		if (selectelem.type != "select-one") continue;
+		
+		for (var k=0; k<selectelem.options.length; k++)
+		{
+			selectelem.options[k].text = st_getValue(selectelem.options[k].text).escapeHTML();
+		}
+
+		selectelem.className += "_translated";
+	}
+	//-------------------------------------------------------------------------
+	
+	//Input-Felder Ã¼bersetzen <input class="stringtable_input" ...> 
+	var temp = document.getElementsByClassName('stringtable_input');
+
+	var input = new Array();
+	for (var i = 0, len = temp.length; i < len; i++)
+	{
+		input[i] = temp[i];
+	}
+
+	for (var i = 0; i < input.length; i ++)
+	{
+		input[i].value = st_getValue(input[i].value).escapeHTML();
+		input[i].className += "_translated";
+	}
+
+};
+
+//Eingabeparameter
+//context: <channeltype>|<value_id>(=<value>)?
+//context: <channeltype>|<value_id>
+//context: <value_id>
+//RÃ¼ckgabeparameter:
+//return: Ã¼bersetzung, wenn context gefunden in den Spezialisierungsgraden:
+//	1. <channeltype>|<value_id>(=<value>)?
+//	2. <channeltype>|<value_id>
+//	3. <value_id>
+//	sonst: value, wenn value aus dem context extrahiert werden kann
+//	sonst: context wird wieder zurÃ¼ckgegeben.
+st_getValue = function(context)
+{
+	var translation;
+	var tokens;
+	var channel_type;
+	var value_id_assign; //Inhalt: <value_id>=<value>
+	var value_id;
+	var value;
+		
+	//Voller context vorhanden?=========================================
+	translation = elvST[context];
+
+	if (translation && translation != "") return translation;
+	//==================================================================
+	
+	//Gibt es einen Eintrag nur mit value_id_assign?====================
+	tokens = context.split('|');
+	value_id_assign = "";
+	
+	if (tokens.length > 1)
+	{
+		//channel_type = tokens[0];
+		value_id_assign = tokens[1];
+		translation = elvST[ value_id_assign ];
+		if (translation && translation != "") return translation;
+	}
+	//==================================================================
+
+	//Gibt es einen Eintrag nur mit dem Variablennamen?=================
+	tokens = context.split('=');
+	value = "";
+	
+	if (tokens.length > 1)
+	{
+		//value_id = tokens[0];
+		value = tokens[1];
+		translation = elvST[ value ];
+		if      (translation && translation != "") return translation;
+		else if (value       && value       != "") return value;
+	}
+	//==================================================================
+	
+	//Gibt es einen Eintrag im INPUT-Feld?==============================
+
+	tokens = context.split(" ");
+	translation = "";
+
+	for (var i = 0; i < tokens.length; i++)
+	{
+		if (typeof elvST[tokens[i]] != 'undefined') 
+		{
+			tokens[i] = elvST[tokens[i]];
+		}
+		translation += tokens[i] + " ";
+	}
+	if (translation && translation != "") return translation;
+	//==================================================================
+
+	if (value_id_assign && value_id_assign != "") return value_id_assign;
+	else                                          return context;
+};
+//<.
