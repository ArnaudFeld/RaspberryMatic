# changed by eQ-3 Entwicklung GmbH 6.4.2006

# Load PROJECT_DIR and PLATFORM from local configuration file
LOCAL_CONFIG_FILE=config.mk
ifneq ($(wildcard $(LOCAL_CONFIG_FILE)),)
include $(LOCAL_CONFIG_FILE)
CONFIGURE=
else
CONFIGURE=configure
endif

# Is PROJECT_DIR specified?
ifeq ($(PROJECT_DIR),)
$(error "missing PROJECT_DIR, run make PROJECT_DIR=<project dir>")
endif

# Is PLATFORM specified?
ifeq ($(PLATFORM),)
$(error "missing PLATFORM, run make PLATFORM=<platform>")
endif

# Load project configuration file
PROJECT_CONFIG_FILE = $(PROJECT_DIR)/platform/$(PLATFORM).mk
ifneq ($(wildcard $(PROJECT_CONFIG_FILE)),)
include $(PROJECT_CONFIG_FILE)
else
$(error "missing project configuration; is PLATFORM=$(PLATFORM) valid?")
endif

# makefile written for gnu make
ROMFSINST = $(shell if [ -x ../../helper_scripts/romfs-inst.sh ]; then echo ../../helper_scripts/romfs-inst.sh; else echo /usr/bin/romfs-inst.sh; fi)

CXX		= $(CROSS)g++
SRC		= ./src
CPPFLAGS	= -I$(SRC) $(MACHINE_OPTION)

ifeq "$(DEBUG)" "1"
OPTIMIZE = -g -O0
else
OPTIMIZE = -O2
endif
GCCWARN		= -Wall -Wstrict-prototypes
GXXWARN		= -Wall
CXXFLAGS	+= $(GXXWARN) $(OPTIMIZE) $(INCLUDES) -fPIC $(MACHINE_OPTION)
LD		= $(CROSS)g++
STRIP		= $(CROSS)strip
LIB		= ./libXmlRpc.a
SOLDFLAGS		= -shared -fPIC $(MACHINE_OPTION)
SOLIB	= ./libXmlRpc.so


# Add your system-dependent network libs here. These are
# only used to build the tests (your application will need them too).
# Linux: none
# Solaris: -lsocket -lnsl
#SYSTEMLIBS	= -lsocket -lnsl
SYSTEMLIBS	=
LDLIBS		= $(LIB) $(SYSTEMLIBS)


OBJ		= $(SRC)/XmlRpcClient.o $(SRC)/XmlRpcDispatch.o \
		$(SRC)/XmlRpcServer.o $(SRC)/XmlRpcServerProxy.o $(SRC)/XmlRpcServerConnection.o \
		$(SRC)/XmlRpcServerMethod.o $(SRC)/XmlRpcSocket.o $(SRC)/XmlRpcSource.o \
		$(SRC)/XmlRpcUtil.o $(SRC)/XmlRpcValue.o

all:	$(CONFIGURE)	$(LIB) $(SOLIB) 

configure:
	rm -f $(LOCAL_CONFIG_FILE)
	touch $(LOCAL_CONFIG_FILE)
	echo "PROJECT_DIR=$(PROJECT_DIR)" >> $(LOCAL_CONFIG_FILE)
	echo "PLATFORM=$(PLATFORM)" >> $(LOCAL_CONFIG_FILE)

$(LIB):		$(OBJ)
		$(AR) $(ARFLAGS) $(LIB) $(OBJ)

$(SOLIB):	$(OBJ)
		$(CXX) $(LDFLAGS) $(SOLDFLAGS) -o $(SOLIB) $(OBJ)
		$(STRIP) $(SOLIB)

install: $(SOLIB) 
		$(STRIP) $(SOLIB)
		$(ROMFSINST) /lib/$(SOLIB)

tests:		$(LIB)
		cd test && $(MAKE) CXX=$(CXX) CXXFLAGS="$(CXXFLAGS)" SYSTEMLIBS="$(SYSTEMLIBS)"

doc doxygen:
		cd src && doxygen Doxyfile

package-ccu2:
	install -m 0755 -d $(CCU2_LIB_DIR)
	install -m 0755 $(SOLIB) $(CCU2_LIB_DIR)
		
clean:
		rm -f $(SRC)/*.o
		rm -f $(SRC)/*~
		rm -f $(LIB)
		rm -f $(SOLIB)

