var x=x||{};x.hub=x.hub||{};x.hub.deviceman=x.hub.deviceman||{};
x.hub.deviceman.DeviceManager=function(){var c=function(b,a){this._logger=require("x.logger.js").getLogger("x.hub.deviceman.DeviceManager");this._tenant=null;this._folder=b;this._folder||(this._folder="db");this._tenantIdx=a;this._tenantIdx||(this._tenantIdx=1)};c.prototype.init=function(b,a){this._logger.log("info","init device managaer:"+this._folder);var d=require("m.aio.configmanager.js");b=this._generateTenantParent(b);this._tenant=new d.Tenant(b);this._tenant.index=this._tenantIdx;this._tenant.license=
"dummy";this._tenant.folder=this._folder;var f=this;require("fs-extra").ensureDir(this._tenant.getFolderPath(),function(){f._load(a)})};c.prototype.reload=function(b){var a=this;require("m.aio.devicemanager.js").reloadTenant(this._tenant,function(d){d&&a._logger.log("warn","reload device error:"+d.message);b&&b(d)})};c.prototype.execute=function(b,a,d,f,c){try{require("m.aio.devicemanager.js").execute(b,this._tenant.index,d,f,c)}catch(e){console.error(e.stack)}};c.prototype.getDeviceInfo=function(){var b=
require("m.aio.devicemanager.js").getIntHandler(this._tenant.index);return b?b.getDeviceInfo():null};c.prototype.findDevice=function(b,a){var d=require("m.aio.devicemanager.js").getIntHandler(this._tenant.index);return d?d.findDeviceIgnoreLicense(b,a):null};c.prototype.findGateway=function(b){var a=require("m.aio.devicemanager.js").getIntHandler(this._tenant.index);return a?a.findGatewayIgnoreLicense(b):null};c.prototype.findGatewayWithIndex=function(b){var a=require("m.aio.devicemanager.js").getIntHandler(this._tenant.index);
return a?a.findGatewayWithIndexIngnoreLicense(b):null};c.prototype.findDeviceWithIndex=function(b){var a=require("m.aio.devicemanager.js").getIntHandler(this._tenant.index);return a?a.findDeviceWithIndexIngnoreLicense(b):null};c.prototype.getAllGeneralDevice=function(b){var a=this;require("m.aio.devicemanager.js").execute("readWithoutLicense",this._tenant.index,"device",{filter:"prop","cloud.enabled":!0},function(d,f){if(d)b&&b(d);else{var c=[];if(f&&0!=f.length){var e=0,g=function(d,k){!d&&k&&(k._origin=
f[e],c.push(k));e++;e<f.length?a.toGeneralDevice(f[e].index,g):b&&b(null,c)};a.toGeneralDevice(f[e].index,g)}else b&&b(null,c)}})};c.prototype.toGeneralDevice=function(b,a){require("m.aio.devicemanager.js").toGeneralDevice(this._tenant.index,b,!0,function(b,c){a&&a(b,c)})};c.prototype.getOwnIdx=function(){return localStorage?localStorage.getItem("x.hub.m.gateway.DB"+this._tenantIdx+"NeoIdx"):-1};c.prototype._load=function(b){var a=this;require("m.aio.devicemanager.js")._loadTenant(this._tenant,function(d){d&&
a._logger.log("warn","init device error:"+d.message);b&&b(d)})};c.prototype._generateTenantParent=function(b){return{fileManager:b,getFolderPath:function(){return this.fileManager.getUserRootDataPath()},getFolder:function(){return""}}};return c}();x.hub.deviceman.Handler=function(){this.deviceManager=new x.hub.deviceman.DeviceManager("db",1);this.deviceManager2=new x.hub.deviceman.DeviceManager("db2",2)};x.hub.deviceman.Handler.prototype.DeviceManager=x.hub.deviceman.DeviceManager;
x.hub.deviceman.Handler.prototype.init=function(c,b,a){this._config(c);var d=0;this.deviceManager.init(b,function(b){d++;2==d&&a&&a(b)});this.deviceManager2.init(b,function(b){d++;2==d&&a&&a(b)})};
x.hub.deviceman.Handler.prototype._config=function(c){var b=this;c.use("/xhub/devicemanager/:id/:type",function(a,b,c){if(a._body)return c();a.body=a.body||{};if("GET"==a.method||"HEAD"==a.method||!a.is("text/xml"))return c();a._body=!0;var d="";a.setEncoding("utf8");a.on("data",function(a){d+=a});a.on("end",function(){a.body=d;c()})});c.use("/xhub/devicemanager/:id/:type",function(a,d){var c=a.method.toLowerCase(),l=a.params.id,e=a.params.type,g=null,h=null;switch(c){case "get":h="readWithoutLicense";
g=a.query;break;case "post":h="create";g=a.body;break;case "put":h="update";g=a.body;break;case "delete":h="delete",g=a.query.index}h?b.deviceManager.execute(h,l,e,g,function(a,b){a?d.send(this.error2json(a)):b.toJSON&&"function"==typeof b.toJSON?d.send(b.toJSON()):(e&&"deviceinfo"==e&&d.set("Content-Type","text/xml"),d.send(b))}.bind(this)):(a=Error("invalid http method"),a.code=500,d.send(this.error2json(a)))}.bind(this))};module.exports=new x.hub.deviceman.Handler;
