var util=require("util"),commandman=require("x.hub.commandman.js"),x=x||{};x.hub=x.hub||{},x.hub.group=x.hub.group||{},x.hub.group.GroupManager=function(){var e=function e(_e,t,r){this._id=_e,this._type=t,this._logger=require("x.logger.js").getLogger("x.hub.group.Group.["+_e+"]"),this._devices=r;};e.prototype.getId=function(){return this._id;},e.prototype.executeCommand=function(e,t,r){if(this._devices&&this._devices.length)for(var i=this._devices.length,o=function o(){0==--i&&t&&t();},n=0;n<this._devices.length;n++)this._doDeviceCommand(this._devices[n],e,o,r);else t&&t();},e.prototype._doDeviceCommand=function(e,t,r,i){if(this._logger.log("trace","execute command:"+JSON.stringify(t)+" for device:"+JSON.stringify(e)),e){var o=JSON.parse(JSON.stringify(e));for(var n in t)"group"!=n&&(o[n]=t[n]);var u=this;commandman.commandHandlerV6.executeCommandWithCommandInfo(o,function(i){var o=i?"error":"trace";u._logger.log(o,"execute command finish:"+JSON.stringify(t)+" for device:"+JSON.stringify(e)+(i?" failed:"+i.message:" success")),r&&r(i);},i);}else r&&r();},e.parse=function(t,r){return t&&r&&r.type?new e(t,r.type,r.devices):null;};var t=function t(){this._logger=require("x.logger.js").getLogger("x.hub.group.GroupManager"),this._dataFolder=null,this._groups=null,this._writing=!1,this._writeCallbacks=[];};return t.FILE_NAME="group.json",t.prototype.init=function(e,t){this._logger.log("info","init group manager"),this._dataFolder=e.getUserRootDataPath(),this._loadGroups(function(e){t&&t(e);});},t.prototype.getGroups=function(){return this._groups;},t.prototype.getGroup=function(e){return this._groups?this._groups[e]:null;},t.prototype.setGroup=function(e,t,r){null!=e&&null!=e?(t?this._groups[e]=t:delete this._groups[e],this._writeGroups(function(e){r&&r(e,t);})):r&&r(new Error("invalid group id"));},t.prototype.executeGroupCommand=function(t,r,i,o){if(null!=t&&null!=t&&this._groups[t]){if(r){var n=this._groups[t],u=e.parse(t,n);u?(this._logger.log("trace","execute group#"+t+" command:"+JSON.stringify(r)),u.executeCommand(r,i,o)):i&&i(new Error("invalid group"));}else i&&i(new Error("invalid command"));}else i&&i(new Error("invalid group id"));},t.prototype._loadGroups=function(e){var t=require("fs-extra"),r=this._getFile(),i=this;t.ensureFile(r,function(t){t?e(t):i._loadFile(function(t,r){t?e(t):(i._groups=r||{},e());});});},t.prototype._writeGroups=function(e){if(e&&-1==this._writeCallbacks.indexOf(e)&&this._writeCallbacks.push(e),!this._writing&&this._writeCallbacks.length){this._writing=!0;var t=this._writeCallbacks;this._writeCallbacks=[];var r=this;this._writeFile(this._groups,function(e){r._writing=!1,t.forEach(function(t){try{t&&t(e);}catch(e){}}),r._writeGroups();});}},t.prototype._getFile=function(){return require("path").resolve(this._dataFolder,t.FILE_NAME);},t.prototype._loadFile=function(e){var t=require("fs"),r=this._getFile();t.readFile(r,"utf8",function(t,r){if(t)e(t);else if(r)try{var i=JSON.parse(r);e(null,i);}catch(t){e(null,{});}else e(null,{});});},t.prototype._writeFile=function(e,t){var r=require("fs"),i=this._getFile();r.writeFile(i,JSON.stringify(e,null,2),function(e){t&&t(e);});},t;}(),x.hub.group.Handler=function(){var e=function e(){this._logger=require("x.logger.js").getLogger("x.hub.group.Handler"),this._groupManager=new x.hub.group.GroupManager();};return e.prototype.init=function(e,t,r){"CA"==global.HARDWARE_VERSION&&this._initHttpApi(e),this._groupManager.init(t,function(e){e&&r(e);});},e.prototype.getGroupManager=function(){return this._groupManager;},e.prototype._initHttpApi=function(){var e=this,t=require("x.hub.js").getServer();t.addRoute("/api/groups",{method:"GET"},function(t,r,i){var o=e._groupManager.getGroups();r.json({XC_SUC:o||{}});}),t.addRoute("/data/grp/",{method:"GET"},function(t,r,i){var o=t.path.substr(10),n=e._groupManager.getGroup(o);n?r.json({XC_SUC:n}):r.json({XC_ERR:{code:"000101",msg:"failed to open file"}});}),t.addRoute("/data/grp/",{method:"POST"},function(t,r){var i=t.path.substr(10);try{var o=t.json;e._groupManager.setGroup(i,o,function(e,i){e?r.json({XC_ERR:{code:"000101",msg:"failed to set group:"+e.message}}):i?r.json({XC_SUC:{bytes:t.size}}):r.json({XC_SUC:{bytes:0}});});}catch(e){r.json({XC_ERR:{code:"000101",msg:"failed to set group:"+e.message}});}});},e;}(),module.exports=new x.hub.group.Handler();