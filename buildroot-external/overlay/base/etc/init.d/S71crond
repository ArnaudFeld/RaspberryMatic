#!/bin/sh
#
# start/stop cron daemon
#

CFG_TEMPLATE_DIR=/etc/config_templates

# function to update the crontab file and
# make sure that it is up to date
init() {
  # crontab dirs
  if [ ! -d /usr/local/crontabs ] ; then
    mkdir -p /usr/local/crontabs
    chmod 775 /usr/local/crontabs
  fi
  if [ ! -d /var/spool/cron ] ; then
    mkdir -p /var/spool/cron
    chmod 775 /var/spool/cron
    ln -sf /usr/local/crontabs /var/spool/cron/crontabs
  fi

  NUM_TEMPLATE=$(wc -l ${CFG_TEMPLATE_DIR}/crontab.root | cut -d' ' -f1)
  NUM_USR=$(grep -Ff ${CFG_TEMPLATE_DIR}/crontab.root /usr/local/crontabs/root 2>/dev/null | wc -l | cut -d' ' -f1)

  # if NUM_USR is not equal to NUM_TEMPLATE we have to
  # update the usr crontab file
  if [[ ${NUM_USR} -ne ${NUM_TEMPLATE} ]]; then
    # add the standard commands from our template
    cat ${CFG_TEMPLATE_DIR}/crontab.root >/tmp/crontab.root

    # put all lines not matching setHWClock and SetInterfaceClock
    # to the temporary crontab.root file
    grep -viE "/bin/setHWClock.sh|/bin/SetInterfaceClock|/usr/sbin/logrotate" /usr/local/crontabs/root 2>/dev/null >>/tmp/crontab.root

    # make the temp crontab the new usr crontab
    mv /tmp/crontab.root /usr/local/crontabs/root
  fi
}

start() {
  echo -n "Starting crond: "
  init
  start-stop-daemon -S -q -b -m -p /var/run/crond.pid --exec /usr/sbin/crond -- -f
  echo "OK"
}

stop () {
  echo -n "Stopping crond: "
  start-stop-daemon -K -q -p /var/run/crond.pid
  echo "OK"
}

restart() {
  stop
  sleep 1
  start
}

case "$1" in
  start)
    start
  ;;
  stop)
    stop
  ;;
  restart|reload)
    restart
  ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
esac

exit $?
