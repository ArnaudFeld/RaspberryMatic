--- buildroot/package/nodejs/0002-fix-duplicate-ninja-rules.patch.orig
+++ buildroot/package/nodejs/0002-fix-duplicate-ninja-rules.patch
@@ -0,0 +1,36 @@
+From 5e533cb943eef68b270f55f0cba02c0ec67c699d Mon Sep 17 00:00:00 2001
+From: Min RK <benjaminrk@gmail.com>
+Date: Fri, 19 Feb 2021 11:57:04 +0100
+Subject: [PATCH] include obj name in shared intermediate
+
+avoids duplicate ninja rules for v8 used in host and target
+---
+ tools/gyp/pylib/gyp/generator/ninja.py | 8 +++++++-
+ 1 file changed, 7 insertions(+), 1 deletion(-)
+
+diff --git a/tools/gyp/pylib/gyp/generator/ninja.py b/tools/gyp/pylib/gyp/generator/ninja.py
+index e064bad7ed84..fd453914ed22 100644
+--- a/tools/gyp/pylib/gyp/generator/ninja.py
++++ b/tools/gyp/pylib/gyp/generator/ninja.py
+@@ -46,7 +46,7 @@
+     # the start of a string, while $| is used for variables that can appear
+     # anywhere in a string.
+     "INTERMEDIATE_DIR": "$!INTERMEDIATE_DIR",
+-    "SHARED_INTERMEDIATE_DIR": "$!PRODUCT_DIR/gen",
++    "SHARED_INTERMEDIATE_DIR": "$!PRODUCT_DIR/$|OBJ/gen",
+     "PRODUCT_DIR": "$!PRODUCT_DIR",
+     "CONFIGURATION_NAME": "$|CONFIGURATION_NAME",
+     # Special variables that may be used by gyp 'rule' targets.
+@@ -289,6 +289,12 @@ def ExpandSpecial(self, path, product_dir=None):
+         CONFIGURATION_NAME = "$|CONFIGURATION_NAME"
+         path = path.replace(CONFIGURATION_NAME, self.config_name)
+ 
++        obj = "obj"
++        if self.toolset != "target":
++            obj += "." + self.toolset
++
++        path = path.replace("$|OBJ", obj)
++
+         return path
+ 
+     def ExpandRuleVariables(self, path, root, dirname, source, ext, name):
--- buildroot/package/nodejs/0003-fix-ninja-args.patch.orig
+++ buildroot/package/nodejs/0003-fix-ninja-args.patch
@@ -0,0 +1,18 @@
+--- node-v16.16.0/Makefile.orig	2022-09-20 08:48:42.172733518 +0200
++++ node-v16.16.0/Makefile	2022-09-20 08:49:03.556963313 +0200
+@@ -116,12 +116,12 @@
+ else
+ ifeq ($(BUILD_WITH), ninja)
+ ifeq ($(V),1)
+-	NINJA_ARGS := $(NINJA_ARGS) -v
++NINJA_ARGS := $(NINJA_ARGS) -v
+ endif
+ ifdef JOBS
+-	NINJA_ARGS := $(NINJA_ARGS) -j$(JOBS)
++NINJA_ARGS := $(NINJA_ARGS) -j$(JOBS)
+ else
+-	NINJA_ARGS := $(NINJA_ARGS) $(filter -j%,$(MAKEFLAGS))
++NINJA_ARGS := $(NINJA_ARGS) $(filter -j%,$(MAKEFLAGS))
+ endif
+ $(NODE_EXE): config.gypi out/Release/build.ninja
+ 	ninja -C out/Release $(NINJA_ARGS)
--- buildroot/package/nodejs/nodejs.mk.orig
+++ buildroot/package/nodejs/nodejs.mk
@@ -47,14 +47,16 @@
 	CXXFLAGS="$(HOST_NODEJS_CXXFLAGS)" \
 	LDFLAGS.host="$(HOST_LDFLAGS)" \
 	NO_LOAD=cctest.target.mk \
-	PATH=$(@D)/bin:$(BR_PATH)
+	PATH=$(@D)/bin:$(BR_PATH) \
+	JOBS=$(BR2_JLEVEL)
 
 NODEJS_MAKE_OPTS = \
 	$(TARGET_CONFIGURE_OPTS) \
 	NO_LOAD=cctest.target.mk \
 	PATH=$(@D)/bin:$(BR_PATH) \
 	LDFLAGS="$(NODEJS_LDFLAGS)" \
-	LD="$(TARGET_CXX)"
+	LD="$(TARGET_CXX)" \
+	JOBS=$(BR2_JLEVEL)
 
 # nodejs's build system uses python which can be a symlink to an unsupported
 # python version (e.g. python 3.10 with nodejs 14.18.1). We work around this by
