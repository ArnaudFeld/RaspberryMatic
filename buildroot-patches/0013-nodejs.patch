--- buildroot/package/nodejs/0001-add-qemu-wrapper-support.patch.orig
+++ buildroot/package/nodejs/0001-add-qemu-wrapper-support.patch
@@ -1,31 +1,7 @@
-From fa09fa3ad6a21ae0b35fb860f76d1762e5f29972 Mon Sep 17 00:00:00 2001
-From: Adam Duskett <aduskett@gmail.com>
-Date: Mon, 27 Sep 2021 12:55:09 -0700
-Subject: [PATCH] add qemu-wrapper support
-
-V8's JIT infrastructure requires binaries such as mksnapshot and mkpeephole to
-be run in the host during the build. However, these binaries must have the
-same bit-width as the target (e.g. a x86_64 host targeting ARMv6 needs to
-produce a 32-bit binary). To work around this issue, cross-compile the
-binaries for the target and run them on the host with QEMU, much like
-gobject-introspection.
-
-However, for the host-variant we do not want to use a
-qemu-wrapper, so add @MAYBE_WRAPPER@ to the needed files and sed the path to
-the qemu-wrapper on target builds, and remove @MAYBE_WRAPPER@ entirely on
-host-builds.
-
-Signed-off-by: Adam Duskett <aduskett@gmail.com>
----
- node.gyp                 | 4 ++--
- tools/v8_gypfiles/v8.gyp | 8 ++++----
- 2 files changed, 6 insertions(+), 6 deletions(-)
-
-diff --git a/node.gyp b/node.gyp
-index 8ba0dfeb..c77f6f7d 100644
---- a/node.gyp
-+++ b/node.gyp
-@@ -491,7 +491,7 @@
+diff -ru node-v16.16.0.orig/node.gyp node-v16.16.0/node.gyp
+--- node-v16.16.0.orig/node.gyp	2022-07-07 13:54:38.000000000 +0200
++++ node-v16.16.0/node.gyp	2022-09-20 14:52:41.271586048 +0200
+@@ -295,7 +295,7 @@
                'action_name': 'run_mkcodecache',
                'process_outputs_as_sources': 1,
                'inputs': [
@@ -34,7 +10,7 @@
                ],
                'outputs': [
                  '<(SHARED_INTERMEDIATE_DIR)/node_code_cache.cc',
-@@ -516,7 +516,7 @@
+@@ -320,7 +320,7 @@
                'action_name': 'node_mksnapshot',
                'process_outputs_as_sources': 1,
                'inputs': [
@@ -43,11 +19,11 @@
                ],
                'outputs': [
                  '<(SHARED_INTERMEDIATE_DIR)/node_snapshot.cc',
-diff --git a/tools/v8_gypfiles/v8.gyp b/tools/v8_gypfiles/v8.gyp
-index 48ec392b..f9bb0fbe 100644
---- a/tools/v8_gypfiles/v8.gyp
-+++ b/tools/v8_gypfiles/v8.gyp
-@@ -220,7 +220,7 @@
+Only in node-v16.16.0: node.gyp.orig
+diff -ru node-v16.16.0.orig/tools/v8_gypfiles/v8.gyp node-v16.16.0/tools/v8_gypfiles/v8.gyp
+--- node-v16.16.0.orig/tools/v8_gypfiles/v8.gyp	2022-07-07 13:54:39.000000000 +0200
++++ node-v16.16.0/tools/v8_gypfiles/v8.gyp	2022-09-20 14:53:18.412082273 +0200
+@@ -68,7 +68,7 @@
          {
            'action_name': 'run_torque_action',
            'inputs': [  # Order matters.
@@ -56,7 +32,16 @@
              '<@(torque_files)',
            ],
            'outputs': [
-@@ -351,7 +351,7 @@
+@@ -99,7 +99,7 @@
+             '<@(torque_outputs_inc)',
+           ],
+           'action': [
+-            '<(PRODUCT_DIR)/<(EXECUTABLE_PREFIX)torque<(EXECUTABLE_SUFFIX)',
++            @MAYBE_WRAPPER@ '<(PRODUCT_DIR)/<(EXECUTABLE_PREFIX)torque<(EXECUTABLE_SUFFIX)',
+             '-o', '<(SHARED_INTERMEDIATE_DIR)/torque-generated',
+             '-v8-root', '<(V8_ROOT)',
+             '<@(torque_files_without_v8_root)',
+@@ -211,7 +211,7 @@
          {
            'action_name': 'generate_bytecode_builtins_list_action',
            'inputs': [
@@ -65,7 +50,7 @@
            ],
            'outputs': [
              '<(generate_bytecode_builtins_list_output)',
-@@ -533,7 +533,7 @@
+@@ -395,7 +395,7 @@
              ],
            },
            'inputs': [
@@ -74,7 +59,7 @@
            ],
            'outputs': [
              '<(INTERMEDIATE_DIR)/snapshot.cc',
-@@ -1448,7 +1448,7 @@
+@@ -1503,7 +1503,7 @@
          {
            'action_name': 'run_gen-regexp-special-case_action',
            'inputs': [
@@ -83,6 +68,4 @@
            ],
            'outputs': [
              '<(SHARED_INTERMEDIATE_DIR)/src/regexp/special-case.cc',
---
-2.31.1
-
+Only in node-v16.16.0/tools/v8_gypfiles: v8.gyp.orig
--- buildroot/package/nodejs/0002-fix-duplicate-ninja-rules.patch.orig
+++ buildroot/package/nodejs/0002-fix-duplicate-ninja-rules.patch
@@ -0,0 +1,36 @@
+From 5e533cb943eef68b270f55f0cba02c0ec67c699d Mon Sep 17 00:00:00 2001
+From: Min RK <benjaminrk@gmail.com>
+Date: Fri, 19 Feb 2021 11:57:04 +0100
+Subject: [PATCH] include obj name in shared intermediate
+
+avoids duplicate ninja rules for v8 used in host and target
+---
+ tools/gyp/pylib/gyp/generator/ninja.py | 8 +++++++-
+ 1 file changed, 7 insertions(+), 1 deletion(-)
+
+diff --git a/tools/gyp/pylib/gyp/generator/ninja.py b/tools/gyp/pylib/gyp/generator/ninja.py
+index e064bad7ed84..fd453914ed22 100644
+--- a/tools/gyp/pylib/gyp/generator/ninja.py
++++ b/tools/gyp/pylib/gyp/generator/ninja.py
+@@ -46,7 +46,7 @@
+     # the start of a string, while $| is used for variables that can appear
+     # anywhere in a string.
+     "INTERMEDIATE_DIR": "$!INTERMEDIATE_DIR",
+-    "SHARED_INTERMEDIATE_DIR": "$!PRODUCT_DIR/gen",
++    "SHARED_INTERMEDIATE_DIR": "$!PRODUCT_DIR/$|OBJ/gen",
+     "PRODUCT_DIR": "$!PRODUCT_DIR",
+     "CONFIGURATION_NAME": "$|CONFIGURATION_NAME",
+     # Special variables that may be used by gyp 'rule' targets.
+@@ -289,6 +289,12 @@ def ExpandSpecial(self, path, product_dir=None):
+         CONFIGURATION_NAME = "$|CONFIGURATION_NAME"
+         path = path.replace(CONFIGURATION_NAME, self.config_name)
+ 
++        obj = "obj"
++        if self.toolset != "target":
++            obj += "." + self.toolset
++
++        path = path.replace("$|OBJ", obj)
++
+         return path
+ 
+     def ExpandRuleVariables(self, path, root, dirname, source, ext, name):
--- buildroot/package/nodejs/0003-fix-ninja-args.patch.orig
+++ buildroot/package/nodejs/0003-fix-ninja-args.patch
@@ -0,0 +1,18 @@
+--- node-v16.16.0/Makefile.orig	2022-09-20 08:48:42.172733518 +0200
++++ node-v16.16.0/Makefile	2022-09-20 08:49:03.556963313 +0200
+@@ -116,12 +116,12 @@
+ else
+ ifeq ($(BUILD_WITH), ninja)
+ ifeq ($(V),1)
+-	NINJA_ARGS := $(NINJA_ARGS) -v
++NINJA_ARGS := $(NINJA_ARGS) -v
+ endif
+ ifdef JOBS
+-	NINJA_ARGS := $(NINJA_ARGS) -j$(JOBS)
++NINJA_ARGS := $(NINJA_ARGS) -j$(JOBS)
+ else
+-	NINJA_ARGS := $(NINJA_ARGS) $(filter -j%,$(MAKEFLAGS))
++NINJA_ARGS := $(NINJA_ARGS) $(filter -j%,$(MAKEFLAGS))
+ endif
+ $(NODE_EXE): config.gypi out/Release/build.ninja
+ 	ninja -C out/Release $(NINJA_ARGS)
--- buildroot/package/nodejs/nodejs.mk.orig
+++ buildroot/package/nodejs/nodejs.mk
@@ -47,14 +47,16 @@
 	CXXFLAGS="$(HOST_NODEJS_CXXFLAGS)" \
 	LDFLAGS.host="$(HOST_LDFLAGS)" \
 	NO_LOAD=cctest.target.mk \
-	PATH=$(@D)/bin:$(BR_PATH)
+	PATH=$(@D)/bin:$(BR_PATH) \
+	JOBS=$(BR2_JLEVEL)
 
 NODEJS_MAKE_OPTS = \
 	$(TARGET_CONFIGURE_OPTS) \
 	NO_LOAD=cctest.target.mk \
 	PATH=$(@D)/bin:$(BR_PATH) \
 	LDFLAGS="$(NODEJS_LDFLAGS)" \
-	LD="$(TARGET_CXX)"
+	LD="$(TARGET_CXX)" \
+	JOBS=$(BR2_JLEVEL)
 
 # nodejs's build system uses python which can be a symlink to an unsupported
 # python version (e.g. python 3.10 with nodejs 14.18.1). We work around this by
--- buildroot/package/nodejs/v8-qemu-wrapper.in.orig
+++ buildroot/package/nodejs/v8-qemu-wrapper.in
@@ -5,5 +5,6 @@
 exec @QEMU_USER@ -r @TOOLCHAIN_HEADERS_VERSION@ \
     @QEMU_USERMODE_ARGS@ \
    -L "${STAGING_DIR}/" \
+   -E LD_LIBRARY_PATH="${STAGING_DIR}/lib:${STAGING_DIR}/usr/lib/" \
     "$@"
 
