From 50ce16ec8ee3544f3aabea016f8972bce98cbf28 Mon Sep 17 00:00:00 2001
From: tildeslash <info@tildeslash.com>
Date: Thu, 16 Sep 2021 10:06:11 +0200
Subject: [PATCH] Fixed: Issue #1002: 32-bit Linux with more then 4GB of RAM
 reported wrong system memory and swap value.

---
 CHANGES                    |  2 ++
 src/process/sysdep_LINUX.c | 38 +++++++++++++++++++-------------------
 2 files changed, 21 insertions(+), 19 deletions(-)

diff --git a/src/process/sysdep_LINUX.c b/src/process/sysdep_LINUX.c
index 70e8c7f7..332c3d9b 100644
--- a/src/process/sysdep_LINUX.c
+++ b/src/process/sysdep_LINUX.c
@@ -586,15 +586,15 @@ int getloadavg_sysdep(double *loadv, int nelem) {
 bool used_system_memory_sysdep(SystemInfo_T *si) {
         char          *ptr;
         char           buf[2048];
-        unsigned long long  mem_total = 0UL;
-        unsigned long  mem_available = 0UL;
-        unsigned long  mem_free = 0UL;
-        unsigned long  buffers = 0UL;
-        unsigned long  cached = 0UL;
-        unsigned long  slabreclaimable = 0UL;
-        unsigned long  swap_total = 0UL;
-        unsigned long  swap_free = 0UL;
-        unsigned long long       zfsarcsize = 0ULL;
+        unsigned long long mem_total = 0ULL;
+        unsigned long long mem_available = 0ULL;
+        unsigned long long mem_free = 0ULL;
+        unsigned long long buffers = 0ULL;
+        unsigned long long cached = 0ULL;
+        unsigned long long slabreclaimable = 0ULL;
+        unsigned long long swap_total = 0ULL;
+        unsigned long long swap_free = 0ULL;
+        unsigned long long zfsarcsize = 0ULL;
 
         if (! file_readProc(buf, sizeof(buf), "meminfo", -1, NULL)) {
                 Log_error("system statistic error -- cannot get system memory info\n");
@@ -607,19 +607,19 @@ bool used_system_memory_sysdep(SystemInfo_T *si) {
         }
 
         // Check if the "MemAvailable" value is available on this system. If it is, we will use it. Otherwise we will attempt to calculate the amount of available memory ourself
-        if ((ptr = strstr(buf, "MemAvailable:")) && sscanf(ptr + 13, "%lu", &mem_available) == 1) {
-                si->memory.usage.bytes = systeminfo.memory.size - (unsigned long long)mem_available * 1024;
+        if ((ptr = strstr(buf, "MemAvailable:")) && sscanf(ptr + 13, "%llu", &mem_available) == 1) {
+                si->memory.usage.bytes = systeminfo.memory.size - mem_available * 1024;
         } else {
                 DEBUG("'MemAvailable' value not available on this system. Attempting to calculate available memory manually...\n");
-                if (! (ptr = strstr(buf, "MemFree:")) || sscanf(ptr + 8, "%lu", &mem_free) != 1) {
+                if (! (ptr = strstr(buf, "MemFree:")) || sscanf(ptr + 8, "%llu", &mem_free) != 1) {
                         Log_error("system statistic error -- cannot get real memory free amount\n");
                         goto error;
                 }
-                if (! (ptr = strstr(buf, "Buffers:")) || sscanf(ptr + 8, "%lu", &buffers) != 1)
+                if (! (ptr = strstr(buf, "Buffers:")) || sscanf(ptr + 8, "%llu", &buffers) != 1)
                         DEBUG("system statistic error -- cannot get real memory buffers amount\n");
-                if (! (ptr = strstr(buf, "Cached:")) || sscanf(ptr + 7, "%lu", &cached) != 1)
+                if (! (ptr = strstr(buf, "Cached:")) || sscanf(ptr + 7, "%llu", &cached) != 1)
                         DEBUG("system statistic error -- cannot get real memory cache amount\n");
-                if (! (ptr = strstr(buf, "SReclaimable:")) || sscanf(ptr + 13, "%lu", &slabreclaimable) != 1)
+                if (! (ptr = strstr(buf, "SReclaimable:")) || sscanf(ptr + 13, "%llu", &slabreclaimable) != 1)
                         DEBUG("system statistic error -- cannot get slab reclaimable memory amount\n");
                 FILE *f = fopen("/proc/spl/kstat/zfs/arcstats", "r");
                 if (f) {
@@ -635,16 +635,16 @@ bool used_system_memory_sysdep(SystemInfo_T *si) {
         }
 
         // Swap
-        if (! (ptr = strstr(buf, "SwapTotal:")) || sscanf(ptr + 10, "%lu", &swap_total) != 1) {
+        if (! (ptr = strstr(buf, "SwapTotal:")) || sscanf(ptr + 10, "%llu", &swap_total) != 1) {
                 Log_error("system statistic error -- cannot get swap total amount\n");
                 goto error;
         }
-        if (! (ptr = strstr(buf, "SwapFree:")) || sscanf(ptr + 9, "%lu", &swap_free) != 1) {
+        if (! (ptr = strstr(buf, "SwapFree:")) || sscanf(ptr + 9, "%llu", &swap_free) != 1) {
                 Log_error("system statistic error -- cannot get swap free amount\n");
                 goto error;
         }
-        si->swap.size = (unsigned long long)swap_total * 1024;
-        si->swap.usage.bytes = (unsigned long long)(swap_total - swap_free) * 1024;
+        si->swap.size = swap_total * 1024;
+        si->swap.usage.bytes = (swap_total - swap_free) * 1024;
 
         return true;
 
-- 
2.32.0

